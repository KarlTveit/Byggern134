
Byggern.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000004fc  00000590  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800112  00800112  000005a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  000005d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003eb  00000000  00000000  0000062a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000263  00000000  00000000  00000a15  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000026b  00000000  00000000  00000c78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  00000ee4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001e2  00000000  00000000  00000fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000123  00000000  00000000  00001186  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000012a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_19>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec ef       	ldi	r30, 0xFC	; 252
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 31       	cpi	r26, 0x12	; 18
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e1       	ldi	r26, 0x12	; 18
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ad 31       	cpi	r26, 0x1D	; 29
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  a6:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_19>:


uint8_t RECEIVED = 0;

ISR(USART0_RXC_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
	RECEIVED = 1;
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	80 93 12 01 	sts	0x0112, r24
	
	unsigned char temp = UDR0;
  d6:	8c b1       	in	r24, 0x0c	; 12
	UART_Transmit(temp); // for å teste at det funker
  d8:	0e 94 b0 00 	call	0x160	; 0x160 <UART_Transmit>
}
  dc:	ff 91       	pop	r31
  de:	ef 91       	pop	r30
  e0:	bf 91       	pop	r27
  e2:	af 91       	pop	r26
  e4:	9f 91       	pop	r25
  e6:	8f 91       	pop	r24
  e8:	7f 91       	pop	r23
  ea:	6f 91       	pop	r22
  ec:	5f 91       	pop	r21
  ee:	4f 91       	pop	r20
  f0:	3f 91       	pop	r19
  f2:	2f 91       	pop	r18
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <main>:


int main(void)
{

	DDRA = 0xFF;
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	8a bb       	out	0x1a, r24	; 26
	//unsigned long ubrr = (F_CPU/(16*BAUD))-1;//31;
	UART_Init(UBRR);
 102:	8f e1       	ldi	r24, 0x1F	; 31
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 a4 00 	call	0x148	; 0x148 <UART_Init>
	fdevopen(&UART_Transmit, &UART_Recieve);
 10a:	66 eb       	ldi	r22, 0xB6	; 182
 10c:	70 e0       	ldi	r23, 0x00	; 0
 10e:	80 eb       	ldi	r24, 0xB0	; 176
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 ba 00 	call	0x174	; 0x174 <fdevopen>
	printf("Hello world\n");
 116:	86 e0       	ldi	r24, 0x06	; 6
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	0e 94 05 01 	call	0x20a	; 0x20a <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11e:	2f ef       	ldi	r18, 0xFF	; 255
 120:	8f e7       	ldi	r24, 0x7F	; 127
 122:	97 e0       	ldi	r25, 0x07	; 7
 124:	21 50       	subi	r18, 0x01	; 1
 126:	80 40       	sbci	r24, 0x00	; 0
 128:	90 40       	sbci	r25, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <main+0x26>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x30>
 12e:	00 00       	nop
	
    while(1)
    {
		_delay_ms(500);
			//PORTA = 0xFF;
			PORTA &= ~(1 << 1);
 130:	d9 98       	cbi	0x1b, 1	; 27
 132:	2f ef       	ldi	r18, 0xFF	; 255
 134:	8f e7       	ldi	r24, 0x7F	; 127
 136:	97 e0       	ldi	r25, 0x07	; 7
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0x3a>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0x44>
 142:	00 00       	nop
		
		_delay_ms(500);
		
			PORTA |= (1 << 1);
 144:	d9 9a       	sbi	0x1b, 1	; 27
 146:	eb cf       	rjmp	.-42     	; 0x11e <main+0x20>

00000148 <UART_Init>:
#include "UART.h"

int UART_Init(unsigned int ubrr) {
	// Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
 148:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 14a:	89 b9       	out	0x09, r24	; 9
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 14c:	88 e1       	ldi	r24, 0x18	; 24
 14e:	8a b9       	out	0x0a, r24	; 10
	// Set frame format: 8data, 2 stop bit
	UCSR0A &= ~(_BV(U2X0));
 150:	59 98       	cbi	0x0b, 1	; 11
	
	
	cli();
 152:	f8 94       	cli

	
	//RX Complete Interrupt Enable
	UCSR0B |= (1 << RXCIE0);
 154:	57 9a       	sbi	0x0a, 7	; 10
	
	//Receive Complete Flag Enable
	UCSR0A |= (1 << RXC0);
 156:	5f 9a       	sbi	0x0b, 7	; 11
	
	//Global Interrupt Flag Enable
	sei();
 158:	78 94       	sei


	return 1;
}
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	08 95       	ret

00000160 <UART_Transmit>:


int UART_Transmit(unsigned char data) {
	while (!(UCSR0A & (1<<UDRE0) )){}
 160:	5d 9b       	sbis	0x0b, 5	; 11
 162:	fe cf       	rjmp	.-4      	; 0x160 <UART_Transmit>
	
	UDR0 = data;
 164:	8c b9       	out	0x0c, r24	; 12
	return 3;
};
 166:	83 e0       	ldi	r24, 0x03	; 3
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	08 95       	ret

0000016c <UART_Recieve>:


unsigned char UART_Recieve(void) {
	

	while ( !(UCSR0A & (1<<RXC0)));
 16c:	5f 9b       	sbis	0x0b, 7	; 11
 16e:	fe cf       	rjmp	.-4      	; 0x16c <UART_Recieve>
	
	return UDR0;
 170:	8c b1       	in	r24, 0x0c	; 12
	
 172:	08 95       	ret

00000174 <fdevopen>:
 174:	0f 93       	push	r16
 176:	1f 93       	push	r17
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
 17e:	8b 01       	movw	r16, r22
 180:	00 97       	sbiw	r24, 0x00	; 0
 182:	31 f4       	brne	.+12     	; 0x190 <fdevopen+0x1c>
 184:	61 15       	cp	r22, r1
 186:	71 05       	cpc	r23, r1
 188:	19 f4       	brne	.+6      	; 0x190 <fdevopen+0x1c>
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	38 c0       	rjmp	.+112    	; 0x200 <fdevopen+0x8c>
 190:	6e e0       	ldi	r22, 0x0E	; 14
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 32 01 	call	0x264	; 0x264 <calloc>
 19c:	fc 01       	movw	r30, r24
 19e:	00 97       	sbiw	r24, 0x00	; 0
 1a0:	a1 f3       	breq	.-24     	; 0x18a <fdevopen+0x16>
 1a2:	80 e8       	ldi	r24, 0x80	; 128
 1a4:	83 83       	std	Z+3, r24	; 0x03
 1a6:	01 15       	cp	r16, r1
 1a8:	11 05       	cpc	r17, r1
 1aa:	71 f0       	breq	.+28     	; 0x1c8 <fdevopen+0x54>
 1ac:	13 87       	std	Z+11, r17	; 0x0b
 1ae:	02 87       	std	Z+10, r16	; 0x0a
 1b0:	81 e8       	ldi	r24, 0x81	; 129
 1b2:	83 83       	std	Z+3, r24	; 0x03
 1b4:	80 91 13 01 	lds	r24, 0x0113
 1b8:	90 91 14 01 	lds	r25, 0x0114
 1bc:	89 2b       	or	r24, r25
 1be:	21 f4       	brne	.+8      	; 0x1c8 <fdevopen+0x54>
 1c0:	f0 93 14 01 	sts	0x0114, r31
 1c4:	e0 93 13 01 	sts	0x0113, r30
 1c8:	20 97       	sbiw	r28, 0x00	; 0
 1ca:	c9 f0       	breq	.+50     	; 0x1fe <fdevopen+0x8a>
 1cc:	d1 87       	std	Z+9, r29	; 0x09
 1ce:	c0 87       	std	Z+8, r28	; 0x08
 1d0:	83 81       	ldd	r24, Z+3	; 0x03
 1d2:	82 60       	ori	r24, 0x02	; 2
 1d4:	83 83       	std	Z+3, r24	; 0x03
 1d6:	80 91 15 01 	lds	r24, 0x0115
 1da:	90 91 16 01 	lds	r25, 0x0116
 1de:	89 2b       	or	r24, r25
 1e0:	71 f4       	brne	.+28     	; 0x1fe <fdevopen+0x8a>
 1e2:	f0 93 16 01 	sts	0x0116, r31
 1e6:	e0 93 15 01 	sts	0x0115, r30
 1ea:	80 91 17 01 	lds	r24, 0x0117
 1ee:	90 91 18 01 	lds	r25, 0x0118
 1f2:	89 2b       	or	r24, r25
 1f4:	21 f4       	brne	.+8      	; 0x1fe <fdevopen+0x8a>
 1f6:	f0 93 18 01 	sts	0x0118, r31
 1fa:	e0 93 17 01 	sts	0x0117, r30
 1fe:	cf 01       	movw	r24, r30
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	0f 91       	pop	r16
 208:	08 95       	ret

0000020a <puts>:
 20a:	0f 93       	push	r16
 20c:	1f 93       	push	r17
 20e:	cf 93       	push	r28
 210:	df 93       	push	r29
 212:	e0 91 15 01 	lds	r30, 0x0115
 216:	f0 91 16 01 	lds	r31, 0x0116
 21a:	23 81       	ldd	r18, Z+3	; 0x03
 21c:	21 ff       	sbrs	r18, 1
 21e:	1b c0       	rjmp	.+54     	; 0x256 <puts+0x4c>
 220:	ec 01       	movw	r28, r24
 222:	00 e0       	ldi	r16, 0x00	; 0
 224:	10 e0       	ldi	r17, 0x00	; 0
 226:	89 91       	ld	r24, Y+
 228:	60 91 15 01 	lds	r22, 0x0115
 22c:	70 91 16 01 	lds	r23, 0x0116
 230:	db 01       	movw	r26, r22
 232:	18 96       	adiw	r26, 0x08	; 8
 234:	ed 91       	ld	r30, X+
 236:	fc 91       	ld	r31, X
 238:	19 97       	sbiw	r26, 0x09	; 9
 23a:	88 23       	and	r24, r24
 23c:	31 f0       	breq	.+12     	; 0x24a <puts+0x40>
 23e:	09 95       	icall
 240:	89 2b       	or	r24, r25
 242:	89 f3       	breq	.-30     	; 0x226 <puts+0x1c>
 244:	0f ef       	ldi	r16, 0xFF	; 255
 246:	1f ef       	ldi	r17, 0xFF	; 255
 248:	ee cf       	rjmp	.-36     	; 0x226 <puts+0x1c>
 24a:	8a e0       	ldi	r24, 0x0A	; 10
 24c:	09 95       	icall
 24e:	89 2b       	or	r24, r25
 250:	11 f4       	brne	.+4      	; 0x256 <puts+0x4c>
 252:	c8 01       	movw	r24, r16
 254:	02 c0       	rjmp	.+4      	; 0x25a <puts+0x50>
 256:	8f ef       	ldi	r24, 0xFF	; 255
 258:	9f ef       	ldi	r25, 0xFF	; 255
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	1f 91       	pop	r17
 260:	0f 91       	pop	r16
 262:	08 95       	ret

00000264 <calloc>:
 264:	0f 93       	push	r16
 266:	1f 93       	push	r17
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	86 9f       	mul	r24, r22
 26e:	80 01       	movw	r16, r0
 270:	87 9f       	mul	r24, r23
 272:	10 0d       	add	r17, r0
 274:	96 9f       	mul	r25, r22
 276:	10 0d       	add	r17, r0
 278:	11 24       	eor	r1, r1
 27a:	c8 01       	movw	r24, r16
 27c:	0e 94 4e 01 	call	0x29c	; 0x29c <malloc>
 280:	ec 01       	movw	r28, r24
 282:	00 97       	sbiw	r24, 0x00	; 0
 284:	29 f0       	breq	.+10     	; 0x290 <calloc+0x2c>
 286:	a8 01       	movw	r20, r16
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	70 e0       	ldi	r23, 0x00	; 0
 28c:	0e 94 75 02 	call	0x4ea	; 0x4ea <memset>
 290:	ce 01       	movw	r24, r28
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	1f 91       	pop	r17
 298:	0f 91       	pop	r16
 29a:	08 95       	ret

0000029c <malloc>:
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	82 30       	cpi	r24, 0x02	; 2
 2a2:	91 05       	cpc	r25, r1
 2a4:	10 f4       	brcc	.+4      	; 0x2aa <malloc+0xe>
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	e0 91 1b 01 	lds	r30, 0x011B
 2ae:	f0 91 1c 01 	lds	r31, 0x011C
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	a0 e0       	ldi	r26, 0x00	; 0
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	30 97       	sbiw	r30, 0x00	; 0
 2bc:	39 f1       	breq	.+78     	; 0x30c <malloc+0x70>
 2be:	40 81       	ld	r20, Z
 2c0:	51 81       	ldd	r21, Z+1	; 0x01
 2c2:	48 17       	cp	r20, r24
 2c4:	59 07       	cpc	r21, r25
 2c6:	b8 f0       	brcs	.+46     	; 0x2f6 <malloc+0x5a>
 2c8:	48 17       	cp	r20, r24
 2ca:	59 07       	cpc	r21, r25
 2cc:	71 f4       	brne	.+28     	; 0x2ea <malloc+0x4e>
 2ce:	82 81       	ldd	r24, Z+2	; 0x02
 2d0:	93 81       	ldd	r25, Z+3	; 0x03
 2d2:	10 97       	sbiw	r26, 0x00	; 0
 2d4:	29 f0       	breq	.+10     	; 0x2e0 <malloc+0x44>
 2d6:	13 96       	adiw	r26, 0x03	; 3
 2d8:	9c 93       	st	X, r25
 2da:	8e 93       	st	-X, r24
 2dc:	12 97       	sbiw	r26, 0x02	; 2
 2de:	2c c0       	rjmp	.+88     	; 0x338 <malloc+0x9c>
 2e0:	90 93 1c 01 	sts	0x011C, r25
 2e4:	80 93 1b 01 	sts	0x011B, r24
 2e8:	27 c0       	rjmp	.+78     	; 0x338 <malloc+0x9c>
 2ea:	21 15       	cp	r18, r1
 2ec:	31 05       	cpc	r19, r1
 2ee:	31 f0       	breq	.+12     	; 0x2fc <malloc+0x60>
 2f0:	42 17       	cp	r20, r18
 2f2:	53 07       	cpc	r21, r19
 2f4:	18 f0       	brcs	.+6      	; 0x2fc <malloc+0x60>
 2f6:	a9 01       	movw	r20, r18
 2f8:	db 01       	movw	r26, r22
 2fa:	01 c0       	rjmp	.+2      	; 0x2fe <malloc+0x62>
 2fc:	ef 01       	movw	r28, r30
 2fe:	9a 01       	movw	r18, r20
 300:	bd 01       	movw	r22, r26
 302:	df 01       	movw	r26, r30
 304:	02 80       	ldd	r0, Z+2	; 0x02
 306:	f3 81       	ldd	r31, Z+3	; 0x03
 308:	e0 2d       	mov	r30, r0
 30a:	d7 cf       	rjmp	.-82     	; 0x2ba <malloc+0x1e>
 30c:	21 15       	cp	r18, r1
 30e:	31 05       	cpc	r19, r1
 310:	f9 f0       	breq	.+62     	; 0x350 <malloc+0xb4>
 312:	28 1b       	sub	r18, r24
 314:	39 0b       	sbc	r19, r25
 316:	24 30       	cpi	r18, 0x04	; 4
 318:	31 05       	cpc	r19, r1
 31a:	80 f4       	brcc	.+32     	; 0x33c <malloc+0xa0>
 31c:	8a 81       	ldd	r24, Y+2	; 0x02
 31e:	9b 81       	ldd	r25, Y+3	; 0x03
 320:	61 15       	cp	r22, r1
 322:	71 05       	cpc	r23, r1
 324:	21 f0       	breq	.+8      	; 0x32e <malloc+0x92>
 326:	fb 01       	movw	r30, r22
 328:	93 83       	std	Z+3, r25	; 0x03
 32a:	82 83       	std	Z+2, r24	; 0x02
 32c:	04 c0       	rjmp	.+8      	; 0x336 <malloc+0x9a>
 32e:	90 93 1c 01 	sts	0x011C, r25
 332:	80 93 1b 01 	sts	0x011B, r24
 336:	fe 01       	movw	r30, r28
 338:	32 96       	adiw	r30, 0x02	; 2
 33a:	44 c0       	rjmp	.+136    	; 0x3c4 <malloc+0x128>
 33c:	fe 01       	movw	r30, r28
 33e:	e2 0f       	add	r30, r18
 340:	f3 1f       	adc	r31, r19
 342:	81 93       	st	Z+, r24
 344:	91 93       	st	Z+, r25
 346:	22 50       	subi	r18, 0x02	; 2
 348:	31 09       	sbc	r19, r1
 34a:	39 83       	std	Y+1, r19	; 0x01
 34c:	28 83       	st	Y, r18
 34e:	3a c0       	rjmp	.+116    	; 0x3c4 <malloc+0x128>
 350:	20 91 19 01 	lds	r18, 0x0119
 354:	30 91 1a 01 	lds	r19, 0x011A
 358:	23 2b       	or	r18, r19
 35a:	41 f4       	brne	.+16     	; 0x36c <malloc+0xd0>
 35c:	20 91 02 01 	lds	r18, 0x0102
 360:	30 91 03 01 	lds	r19, 0x0103
 364:	30 93 1a 01 	sts	0x011A, r19
 368:	20 93 19 01 	sts	0x0119, r18
 36c:	20 91 00 01 	lds	r18, 0x0100
 370:	30 91 01 01 	lds	r19, 0x0101
 374:	21 15       	cp	r18, r1
 376:	31 05       	cpc	r19, r1
 378:	41 f4       	brne	.+16     	; 0x38a <malloc+0xee>
 37a:	2d b7       	in	r18, 0x3d	; 61
 37c:	3e b7       	in	r19, 0x3e	; 62
 37e:	40 91 04 01 	lds	r20, 0x0104
 382:	50 91 05 01 	lds	r21, 0x0105
 386:	24 1b       	sub	r18, r20
 388:	35 0b       	sbc	r19, r21
 38a:	e0 91 19 01 	lds	r30, 0x0119
 38e:	f0 91 1a 01 	lds	r31, 0x011A
 392:	e2 17       	cp	r30, r18
 394:	f3 07       	cpc	r31, r19
 396:	a0 f4       	brcc	.+40     	; 0x3c0 <malloc+0x124>
 398:	2e 1b       	sub	r18, r30
 39a:	3f 0b       	sbc	r19, r31
 39c:	28 17       	cp	r18, r24
 39e:	39 07       	cpc	r19, r25
 3a0:	78 f0       	brcs	.+30     	; 0x3c0 <malloc+0x124>
 3a2:	ac 01       	movw	r20, r24
 3a4:	4e 5f       	subi	r20, 0xFE	; 254
 3a6:	5f 4f       	sbci	r21, 0xFF	; 255
 3a8:	24 17       	cp	r18, r20
 3aa:	35 07       	cpc	r19, r21
 3ac:	48 f0       	brcs	.+18     	; 0x3c0 <malloc+0x124>
 3ae:	4e 0f       	add	r20, r30
 3b0:	5f 1f       	adc	r21, r31
 3b2:	50 93 1a 01 	sts	0x011A, r21
 3b6:	40 93 19 01 	sts	0x0119, r20
 3ba:	81 93       	st	Z+, r24
 3bc:	91 93       	st	Z+, r25
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <malloc+0x128>
 3c0:	e0 e0       	ldi	r30, 0x00	; 0
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	cf 01       	movw	r24, r30
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	08 95       	ret

000003cc <free>:
 3cc:	cf 93       	push	r28
 3ce:	df 93       	push	r29
 3d0:	00 97       	sbiw	r24, 0x00	; 0
 3d2:	09 f4       	brne	.+2      	; 0x3d6 <free+0xa>
 3d4:	87 c0       	rjmp	.+270    	; 0x4e4 <free+0x118>
 3d6:	fc 01       	movw	r30, r24
 3d8:	32 97       	sbiw	r30, 0x02	; 2
 3da:	13 82       	std	Z+3, r1	; 0x03
 3dc:	12 82       	std	Z+2, r1	; 0x02
 3de:	c0 91 1b 01 	lds	r28, 0x011B
 3e2:	d0 91 1c 01 	lds	r29, 0x011C
 3e6:	20 97       	sbiw	r28, 0x00	; 0
 3e8:	81 f4       	brne	.+32     	; 0x40a <free+0x3e>
 3ea:	20 81       	ld	r18, Z
 3ec:	31 81       	ldd	r19, Z+1	; 0x01
 3ee:	28 0f       	add	r18, r24
 3f0:	39 1f       	adc	r19, r25
 3f2:	80 91 19 01 	lds	r24, 0x0119
 3f6:	90 91 1a 01 	lds	r25, 0x011A
 3fa:	82 17       	cp	r24, r18
 3fc:	93 07       	cpc	r25, r19
 3fe:	79 f5       	brne	.+94     	; 0x45e <free+0x92>
 400:	f0 93 1a 01 	sts	0x011A, r31
 404:	e0 93 19 01 	sts	0x0119, r30
 408:	6d c0       	rjmp	.+218    	; 0x4e4 <free+0x118>
 40a:	de 01       	movw	r26, r28
 40c:	20 e0       	ldi	r18, 0x00	; 0
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	ae 17       	cp	r26, r30
 412:	bf 07       	cpc	r27, r31
 414:	50 f4       	brcc	.+20     	; 0x42a <free+0x5e>
 416:	12 96       	adiw	r26, 0x02	; 2
 418:	4d 91       	ld	r20, X+
 41a:	5c 91       	ld	r21, X
 41c:	13 97       	sbiw	r26, 0x03	; 3
 41e:	9d 01       	movw	r18, r26
 420:	41 15       	cp	r20, r1
 422:	51 05       	cpc	r21, r1
 424:	09 f1       	breq	.+66     	; 0x468 <free+0x9c>
 426:	da 01       	movw	r26, r20
 428:	f3 cf       	rjmp	.-26     	; 0x410 <free+0x44>
 42a:	b3 83       	std	Z+3, r27	; 0x03
 42c:	a2 83       	std	Z+2, r26	; 0x02
 42e:	40 81       	ld	r20, Z
 430:	51 81       	ldd	r21, Z+1	; 0x01
 432:	84 0f       	add	r24, r20
 434:	95 1f       	adc	r25, r21
 436:	8a 17       	cp	r24, r26
 438:	9b 07       	cpc	r25, r27
 43a:	71 f4       	brne	.+28     	; 0x458 <free+0x8c>
 43c:	8d 91       	ld	r24, X+
 43e:	9c 91       	ld	r25, X
 440:	11 97       	sbiw	r26, 0x01	; 1
 442:	84 0f       	add	r24, r20
 444:	95 1f       	adc	r25, r21
 446:	02 96       	adiw	r24, 0x02	; 2
 448:	91 83       	std	Z+1, r25	; 0x01
 44a:	80 83       	st	Z, r24
 44c:	12 96       	adiw	r26, 0x02	; 2
 44e:	8d 91       	ld	r24, X+
 450:	9c 91       	ld	r25, X
 452:	13 97       	sbiw	r26, 0x03	; 3
 454:	93 83       	std	Z+3, r25	; 0x03
 456:	82 83       	std	Z+2, r24	; 0x02
 458:	21 15       	cp	r18, r1
 45a:	31 05       	cpc	r19, r1
 45c:	29 f4       	brne	.+10     	; 0x468 <free+0x9c>
 45e:	f0 93 1c 01 	sts	0x011C, r31
 462:	e0 93 1b 01 	sts	0x011B, r30
 466:	3e c0       	rjmp	.+124    	; 0x4e4 <free+0x118>
 468:	d9 01       	movw	r26, r18
 46a:	13 96       	adiw	r26, 0x03	; 3
 46c:	fc 93       	st	X, r31
 46e:	ee 93       	st	-X, r30
 470:	12 97       	sbiw	r26, 0x02	; 2
 472:	4d 91       	ld	r20, X+
 474:	5d 91       	ld	r21, X+
 476:	a4 0f       	add	r26, r20
 478:	b5 1f       	adc	r27, r21
 47a:	ea 17       	cp	r30, r26
 47c:	fb 07       	cpc	r31, r27
 47e:	79 f4       	brne	.+30     	; 0x49e <free+0xd2>
 480:	80 81       	ld	r24, Z
 482:	91 81       	ldd	r25, Z+1	; 0x01
 484:	84 0f       	add	r24, r20
 486:	95 1f       	adc	r25, r21
 488:	02 96       	adiw	r24, 0x02	; 2
 48a:	d9 01       	movw	r26, r18
 48c:	11 96       	adiw	r26, 0x01	; 1
 48e:	9c 93       	st	X, r25
 490:	8e 93       	st	-X, r24
 492:	82 81       	ldd	r24, Z+2	; 0x02
 494:	93 81       	ldd	r25, Z+3	; 0x03
 496:	13 96       	adiw	r26, 0x03	; 3
 498:	9c 93       	st	X, r25
 49a:	8e 93       	st	-X, r24
 49c:	12 97       	sbiw	r26, 0x02	; 2
 49e:	e0 e0       	ldi	r30, 0x00	; 0
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	8a 81       	ldd	r24, Y+2	; 0x02
 4a4:	9b 81       	ldd	r25, Y+3	; 0x03
 4a6:	00 97       	sbiw	r24, 0x00	; 0
 4a8:	19 f0       	breq	.+6      	; 0x4b0 <free+0xe4>
 4aa:	fe 01       	movw	r30, r28
 4ac:	ec 01       	movw	r28, r24
 4ae:	f9 cf       	rjmp	.-14     	; 0x4a2 <free+0xd6>
 4b0:	ce 01       	movw	r24, r28
 4b2:	02 96       	adiw	r24, 0x02	; 2
 4b4:	28 81       	ld	r18, Y
 4b6:	39 81       	ldd	r19, Y+1	; 0x01
 4b8:	82 0f       	add	r24, r18
 4ba:	93 1f       	adc	r25, r19
 4bc:	20 91 19 01 	lds	r18, 0x0119
 4c0:	30 91 1a 01 	lds	r19, 0x011A
 4c4:	28 17       	cp	r18, r24
 4c6:	39 07       	cpc	r19, r25
 4c8:	69 f4       	brne	.+26     	; 0x4e4 <free+0x118>
 4ca:	30 97       	sbiw	r30, 0x00	; 0
 4cc:	29 f4       	brne	.+10     	; 0x4d8 <free+0x10c>
 4ce:	10 92 1c 01 	sts	0x011C, r1
 4d2:	10 92 1b 01 	sts	0x011B, r1
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <free+0x110>
 4d8:	13 82       	std	Z+3, r1	; 0x03
 4da:	12 82       	std	Z+2, r1	; 0x02
 4dc:	d0 93 1a 01 	sts	0x011A, r29
 4e0:	c0 93 19 01 	sts	0x0119, r28
 4e4:	df 91       	pop	r29
 4e6:	cf 91       	pop	r28
 4e8:	08 95       	ret

000004ea <memset>:
 4ea:	dc 01       	movw	r26, r24
 4ec:	01 c0       	rjmp	.+2      	; 0x4f0 <memset+0x6>
 4ee:	6d 93       	st	X+, r22
 4f0:	41 50       	subi	r20, 0x01	; 1
 4f2:	50 40       	sbci	r21, 0x00	; 0
 4f4:	e0 f7       	brcc	.-8      	; 0x4ee <memset+0x4>
 4f6:	08 95       	ret

000004f8 <_exit>:
 4f8:	f8 94       	cli

000004fa <__stop_program>:
 4fa:	ff cf       	rjmp	.-2      	; 0x4fa <__stop_program>
